{"root":{"data":{"text":"异步I/O","expandState":"expand"},"children":[{"data":{"text":"为什么要异步I/O","expandState":"expand"},"children":[{"data":{"text":"用户体验，消耗时间为max(M,N)"},"children":[]},{"data":{"text":"资源分配，让单线程远离阻塞，更好利用CPU"},"children":[]}]},{"data":{"text":"异步I/O实现现状","expandState":"expand"},"children":[{"data":{"text":"异步I/O与非阻塞I/O","expandState":"expand"},"children":[{"data":{"text":"轮询技术","expandState":"expand"},"children":[{"data":{"text":"read"},"children":[]},{"data":{"text":"select"},"children":[]},{"data":{"text":"poll"},"children":[]},{"data":{"text":"epoll"},"children":[]},{"data":{"text":"kqueue"},"children":[]}]}]},{"data":{"text":"理想的非阻塞异步I/O","expandState":"expand"},"children":[{"data":{"text":"应用程序发起非阻塞调用，无需通过遍历或者事件唤醒等方式轮询"},"children":[]}]},{"data":{"text":"现实中的异步I/O","expandState":"expand"},"children":[{"data":{"text":"*nix平台下采用libeio配合libev实现I/O部分"},"children":[]},{"data":{"text":"windows平台采用IOCP是实现异步I/O"},"children":[]}]}]},{"data":{"text":"Node的异步I/O","expandState":"expand"},"children":[{"data":{"text":"事件循环"},"children":[]},{"data":{"text":"观察者"},"children":[]},{"data":{"text":"请求对象"},"children":[]},{"data":{"text":"执行回调"},"children":[]}]},{"data":{"text":"非I/O的异步API","expandState":"expand"},"children":[{"data":{"text":"定时器：setTimeout(),setInterval()"},"children":[]},{"data":{"text":"process.nextTick():操作比较轻量，高效"},"children":[]},{"data":{"text":"setImmediate()与上者类似，但优先级低于上者"},"children":[]}]},{"data":{"text":"事件驱动和高性能服务器","expandState":"expand"},"children":[{"data":{"text":"经典模型","expandState":"expand"},"children":[{"data":{"text":"同步式"},"children":[]},{"data":{"text":"每进程/每请求"},"children":[]},{"data":{"text":"每线程/每请求"},"children":[]}]},{"data":{"text":"知名事件驱动实现","expandState":"expand"},"children":[{"data":{"text":"Ruby的Event Machine"},"children":[]},{"data":{"text":"Perl的AnyEvent"},"children":[]},{"data":{"text":"Python的Twisted"},"children":[]},{"data":{"text":"Node异步I/O"},"children":[]}]}]}]},"template":"right","theme":"fresh-purple-compat","version":"1.4.43"}