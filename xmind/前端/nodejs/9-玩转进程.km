{"root":{"data":{"text":"玩转进程","expandState":"expand"},"children":[{"data":{"text":"服务器模型的变迁","expandState":"expand"},"children":[{"data":{"text":"石器时代：同步","expandState":"expand"},"children":[{"data":{"text":"基本淘汰"},"children":[]}]},{"data":{"text":"青铜时代：复制","expandState":"expand"},"children":[{"data":{"text":"每个进程都需要一个进程来服务"},"children":[]}]},{"data":{"text":"白银时代：多线程","expandState":"expand"},"children":[{"data":{"text":"一个线程服务一个请求，并且之间共享数据"},"children":[]}]},{"data":{"text":"黄金时代：事件驱动","expandState":"expand"},"children":[{"data":{"text":"所有处理都在单进程上面进行"},"children":[]}]}]},{"data":{"text":"多线程架构","expandState":"expand"},"children":[{"data":{"text":"Node提供了child_process模块，并提供child_process.fork()实现进程的复制"},"children":[]},{"data":{"text":"创建子进程","expandState":"expand"},"children":[{"data":{"text":"spawn()：启动一个子进程来执行命令"},"children":[]},{"data":{"text":"exec()：同上功能，但是有一个回调函数获取子进程状况"},"children":[]},{"data":{"text":"execFile()：启动一个子进程来执行可执行文件"},"children":[]},{"data":{"text":"fork()：和spawn()类似，不同是只需要执行JavaScript文件模块即可"},"children":[]}]},{"data":{"text":"进程中通信","expandState":"expand"},"children":[{"data":{"text":"Master-Worker模式中，实现主进程管理和调度需要主从进程中通信"},"children":[]},{"data":{"text":"IPC进程中通信","expandState":"expand"},"children":[{"data":{"text":"为了让不同的进程能够互相访问资源并进程协调工作"},"children":[]},{"data":{"text":"pipe管道技术"},"children":[]}]},{"data":{"text":"句柄传递","expandState":"expand"},"children":[{"data":{"text":"child.send(message,[sendHandle])"},"children":[]},{"data":{"text":"句柄发送与还原"},"children":[]},{"data":{"text":"端口共同监听"},"children":[]}]}]}]},{"data":{"text":"集群稳定之路","expandState":"expand"},"children":[{"data":{"text":"进程事件","expandState":"expand"},"children":[{"data":{"text":"send()事件"},"children":[]},{"data":{"text":"message事件"},"children":[]},{"data":{"text":"error：当子进程无法被复制创建、杀死、或发送消息都会触发该事件"},"children":[]},{"data":{"text":"exit：子进程退出时候会触发该事件"},"children":[]},{"data":{"text":"close；在子进程标准输入输出流终止时触发该事件"},"children":[]},{"data":{"text":"disconnect：在父进程或子进程调用这个方法时候触发"},"children":[]}]},{"data":{"text":"自动重启","expandState":"expand"},"children":[{"data":{"text":"自杀信号","expandState":"expand"},"children":[{"data":{"text":"1.工作进程得知要退出时，向主进程发送自杀信号"},"children":[]},{"data":{"text":"2.然后停止接收新的连接，当所有连接断开后才退出"},"children":[]},{"data":{"text":"3.主进程接收自杀信号后，立即创建新的工作进程服务"},"children":[]}]},{"data":{"text":"限制重启","expandState":"expand"},"children":[{"data":{"text":"目的：防止进程无限制被重启"},"children":[]},{"data":{"text":"1.引入一个队列作为标记在重启的工作进程打点"},"children":[]},{"data":{"text":"2.并判断重启是否过于频繁"},"children":[]}]},{"data":{"text":"负载均衡","expandState":"expand"},"children":[{"data":{"text":"类似：饭店点菜，保证厨师均衡工作"},"children":[]},{"data":{"text":"解决","expandState":"expand"},"children":[{"data":{"text":"1.使用Round-Robin又叫轮叫调度"},"children":[]},{"data":{"text":"2.由主进程接受连接，将依次分发给工作进程"},"children":[]}]}]},{"data":{"text":"状态共享","expandState":"expand"},"children":[{"data":{"text":"方法","expandState":"expand"},"children":[{"data":{"text":"第三方数据存储","expandState":"expand"},"children":[{"data":{"text":"各个子进程向第三方定时轮询"},"children":[]}]},{"data":{"text":"主动通知","expandState":"expand"},"children":[{"data":{"text":"数据发生更新时，主动通知子进程"},"children":[]}]}]}]}]}]},{"data":{"text":"Cluster模块","expandState":"expand"},"children":[{"data":{"text":"作用：用于解决多核CPU的利用率问题，同时也提供较完善的API，用以处理进程的健壮性"},"children":[]},{"data":{"text":"模块组成：child_process和net模块的组合应用"},"children":[]},{"data":{"text":"事件","expandState":"expand"},"children":[{"data":{"text":"fork：复制一个工作进程后触发"},"children":[]},{"data":{"text":"online：复制好后，工作进程主动发送一条online消息给主进程，主收到后触发"},"children":[]},{"data":{"text":"listening：工作进程调用listen()后发送一条listening消息给主进程，收到后触发"},"children":[]},{"data":{"text":"disconnect：主进程和工作进程之间的IPC通道断开后触发该事件"},"children":[]},{"data":{"text":"exit：有工作进程退出时触发该事件"},"children":[]},{"data":{"text":"setup：cluster.setupMaster()执行后触发该事件"},"children":[]}]}]}]},"template":"right","theme":"fresh-blue-compat","version":"1.4.43"}