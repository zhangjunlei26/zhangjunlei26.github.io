{"root":{"data":{"id":"e89402d74d4a","created":1535125195,"text":"Rust生态"},"children":[{"data":{"id":"bnvgh5mnpw08","created":1535125227246,"text":"不使用标准库","expandState":"collapse"},"children":[{"data":{"id":"bnvgr5bgcewc","created":1535126010211,"text":"概述","expandState":"expand"},"children":[{"data":{"id":"bnvghyz6hu88","created":1535125291130,"text":"Rust 的标准库提供了很多有用的功能，不过它假设它的 host 系统的多种功能的支持：线程，网络，堆分配和其他功能。"},"children":[]},{"data":{"id":"bnvgrd5lusgk","created":1535126027271,"text":"有些系统并没有这些功能，不过，Rust也能在这些系统上工作。"},"children":[]},{"data":{"id":"bnvgrkz2rb40","created":1535126044290,"text":"为此，我们可以通过一个属性来告诉 Rust 我们不想使用标准库：#![no_std]"},"children":[]}]},{"data":{"id":"bnvgjoyhs1s0","created":1535125426049,"text":"使用 libc","expandState":"expand"},"children":[{"data":{"id":"bnvgjtiqwkgg","created":1535125435981,"text":"为了构建一个#[no_std]可执行程序，我们需要 libc 作为依赖。"},"children":[]},{"data":{"id":"bnvgjzlj8gg8","created":1535125449210,"text":"Cargo.toml文件中指定"},"children":[{"data":{"id":"bnvgk546jc0g","created":1535125461221,"text":"[dependencies]\nlibc = { version = \"0.2.14\", default-features = false }"},"children":[]},{"data":{"id":"bnvgkjnwg0wk","created":1535125492888,"text":"注意默认功能被禁用了。这是关键的一步————\nlibc 的默认功能引用了标准库所以必须被禁用。"},"children":[]}]}]},{"data":{"id":"bnvgkwizzc8o","created":1535125520890,"text":"不用标准库编写可执行程序","expandState":"collapse"},"children":[{"data":{"id":"bnvgl6juio00","created":1535125542709,"text":"有两种可能的控制入口点的方法","expandState":"collapse"},"children":[{"data":{"id":"bnvglf1ryl4c","created":1535125561208,"text":"#[start]属性"},"children":[]},{"data":{"id":"bnvglkbrjxko","created":1535125572696,"text":"用你自己的代码 override C main函数的默认 shim"},"children":[]}]},{"data":{"id":"bnvgmb333tc8","created":1535125630944,"text":"被标记为#[start]的函数传递的参数格式与 C 一致","expandState":"collapse"},"children":[{"data":{"id":"bnvgmpqzx0oo","created":1535125662865,"text":"// Pull in the system libc library for what crt0.o likely requires.\nextern crate libc;\n\n// Entry point for this program.\n#[start]\nfn start(_argc: isize, _argv: *const *const u8) -> isize {\n\t0\n}\n// This function may be needed based on the compilation target.\n#[lang = \"eh_unwind_resume\"]\n#[no_mangle]\npub extern \nfn rust_eh_unwind_resume() {\n}"},"children":[]}]},{"data":{"id":"bnvgoiyodggg","created":1535125804820,"text":"要 override 编译器插入的main shim，你必须使用#![no_main]禁用它并通过正确的 ABI \n和正确的名字来创建合适的函数，这也需要需要覆盖编译器的命名改编"},"children":[]}]}]},{"data":{"id":"bnvgtardoygc","created":1535126178785,"text":"固有功能","expandState":"expand"},"children":[{"data":{"id":"bnvgto3cejkg","created":1535126207807,"text":"可以像 FFI 函数那样导入它们，使用特殊的rust-intrinsic ABI"},"children":[]}]},{"data":{"id":"bnvqnwx8q800","created":1535153967943,"text":"语言项"},"children":[{"data":{"id":"bnvqo7z6d9ck","created":1535153992005,"text":"特性","expandState":"collapse"},"children":[{"data":{"id":"bnvqod5yrjks","created":1535154003299,"text":"语言项通常由 Rust 发行版的 crate 提供"},"children":[]},{"data":{"id":"bnvqpwj8468g","created":1535154123824,"text":"功能不是硬编码进语言的，而是在库中实现"},"children":[]},{"data":{"id":"bnvqq9c5mhc8","created":1535154151695,"text":"通过一个特殊的标记告诉编译器它存在。这个标记是#[lang=\"...\"]属性并且有不同的值...,也就是不同的“语言项”"},"children":[]},{"data":{"id":"bnvqosx0j6og","created":1535154037586,"text":"它自身有一个不稳定的接口"},"children":[]},{"data":{"id":"bnvqoyi7fvkg","created":1535154049752,"text":"建议使用官方发布的 crate 而不是定义自己的版本"},"children":[]}]}]}]},"template":"right","theme":"classic","version":"1.4.43"}