{"root":{"data":{"id":"f6e7f525ef9a","created":1531491631,"text":"RUST脑图整理","font-family":"微软雅黑,Microsoft YaHei","font-weight":"bold","font-size":24,"expandState":"expand"},"children":[{"data":{"id":"bn3d4d87oko0","created":1532272082936,"text":"变量绑定","expandState":"expand","font-family":"andale mono","font-size":16},"children":[{"data":{"id":"bn3d61j902g0","created":1532272214210,"text":"把值绑定到一个名字上","font-family":"andale mono"},"children":[]},{"data":{"id":"bn3d6geysxc0","created":1532272246603,"text":"模式","font-family":"andale mono"},"children":[{"data":{"id":"bn3d6lwmxf40","created":1532272258556,"text":"let (x,y) = (1,2)","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn3d75dgqrk0","created":1532272300932,"text":"类型注解","font-family":"andale mono"},"children":[{"data":{"id":"bn3d7bp64zc0","created":1532272314700,"text":"let x: i32 = 5;","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn3d7vxu0sg0","created":1532272358760,"text":"可变性","font-family":"andale mono"},"children":[{"data":{"id":"bn3d7y2avvs0","created":1532272363384,"text":"let mut x = 5;","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6q01wh9co0","created":1532613099124,"text":"初始化绑定","font-family":"andale mono"},"children":[{"data":{"id":"bn6q073m56o0","created":1532613110440,"text":"let x:i32","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6q0au5tqo0","created":1532613118575,"text":"未赋值直接使用引发编译错误","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn3dcvdrro00","created":1532272749368,"text":"作用域的隐藏","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bmvqhm5nj0w0","created":1531497315882,"text":"类型","font-family":"andale mono","font-size":16,"expandState":"expand"},"children":[{"data":{"id":"bn6s1zzgipc0","created":1532618893899,"text":"原生","expandState":"expand","font-family":"andale mono"},"children":[{"data":{"id":"bn6s24gva5c0","created":1532618903659,"text":"bool","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6s29mln6o0","created":1532618914889,"text":"char","expandState":"expand","font-family":"andale mono"},"children":[{"data":{"id":"bn6s2dkg1tc0","created":1532618923466,"text":"4字节","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6s2khfkeo0","created":1532618938521,"text":"数字类型","expandState":"expand","font-family":"andale mono"},"children":[{"data":{"id":"bn6s5e8ixrs0","created":1532619160015,"text":"有符号：i8/i16/i32/i64","font-family":"andale mono"},"children":[{"data":{"id":"bn6s62azpc00","created":1532619212406,"text":"let x = 42;","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6s5oc7gtk0","created":1532619182005,"text":"无符号：u8/u16/u32/u64","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6s8oh4rvc0","created":1532619417395,"text":"可变大小类型","font-family":"andale mono"},"children":[{"data":{"id":"bn6s8s7jmrs0","created":1532619425523,"text":"isize","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6s8trjbb40","created":1532619428908,"text":"usize","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6s9k8n4d40","created":1532619486539,"text":"浮点类型","font-family":"andale mono"},"children":[{"data":{"id":"bn6s9o9w27c0","created":1532619495322,"text":"f32","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6s9qfolyg0","created":1532619500025,"text":"f64","expandState":"expand","font-family":"andale mono"},"children":[{"data":{"id":"bn6s67ojpn40","created":1532619224110,"text":"let y = 1.0;","font-family":"andale mono"},"children":[]}]}]}]},{"data":{"id":"bn6sa7b3s4g0","created":1532619536754,"text":"数组","font-family":"andale mono","expandState":"collapse"},"children":[{"data":{"id":"bn6sb0f2iwo0","created":1532619600120,"text":"let mut m = [1,2,3]\nlet names = [\"Graydon\", \"Brian\", \"Niko\"]; // names: [&str; 3]","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6sc3c3h800","created":1532619684835,"text":"初始化为相同值 let a = [0; 20];","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6sdgy1dl40","created":1532619792824,"text":"元素数量 a.len()","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6sfululw00","created":1532619979290,"text":"下标从0开始  names[0]","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6sgj4tex40","created":1532620032680,"text":"切片slice","font-family":"andale mono","expandState":"collapse"},"children":[{"data":{"id":"bn6sjk4viig0","created":1532620269953,"text":"特性","expandState":"expand","font-family":"andale mono"},"children":[{"data":{"id":"bn6sgxmlty80","created":1532620064231,"text":"是一个数组的引用，slice并不是直接创建的，而是引用一个已经存在的变量。","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6shw386w00","created":1532620139246,"text":"slice 有预定义的长度，可以是可变也可以是不可变的。","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6sizy07d40","created":1532620226002,"text":"slice 代表一个指向数据开始的指针和一个长度。","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6smsbbu0o0","created":1532620522850,"text":"片段拥有&[T]类型。","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6sk4jm8o00","created":1532620314380,"text":"语法","font-family":"andale mono"},"children":[{"data":{"id":"bn6skyr5c8w0","created":1532620380139,"text":"let a = [0, 1, 2, 3, 4];\nlet complete = &a[..];  //包含全部元素\nlet middle = &a[1..4]; // A slice of `a`: only the elements `1`, `2`, and `3`.","font-family":"andale mono"},"children":[]}]}]},{"data":{"id":"bn6soyhy1bk0","created":1532620693039,"text":"str","font-family":"andale mono","expandState":"collapse"},"children":[{"data":{"id":"bn6sp149als0","created":1532620698742,"text":"特性","font-family":"andale mono"},"children":[{"data":{"id":"bn6sp3tjizs0","created":1532620704624,"text":"原始字符串类型，不定长","font-family":"andale mono"},"children":[]}]}]},{"data":{"id":"bn6sptgmv340","created":1532620760440,"text":"元组 Tuples","expandState":"collapse","font-family":"andale mono"},"children":[{"data":{"id":"bn6sq20809s0","created":1532620779039,"text":"特性","font-family":"andale mono","expandState":"expand"},"children":[{"data":{"id":"bn6sq44sp1c0","created":1532620783669,"text":"固定大小的有序列表","expandState":"expand","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6sy50c3h40","created":1532621412489,"text":"相同类型和数量，可相互赋值","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6syvdpuo80","created":1532621469895,"text":"可以通过一个解构let（destructuring let）访问元组中的字段","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6sqhsnxk00","created":1532620813410,"text":"let x = (1, \"hello\");\nlet x: (i32, &str) = (1, \"hello\");\nlet (x, y, z) = (1, 2, 3);","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6t0piq4iw0","created":1532621613865,"text":"歧义","font-family":"andale mono"},"children":[{"data":{"id":"bn6t0v5fpr40","created":1532621626122,"text":"(0,);   单元素Tuple","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6t13u7ct40","created":1532621645034,"text":"(0);//0在括号中","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6t1pef7w00","created":1532621691969,"text":"索引","font-family":"andale mono"},"children":[{"data":{"id":"bn6t1x0516g0","created":1532621708520,"text":"let tuple = (1, 2, 3);\nlet x = tuple.0;\nlet y = tuple.1;\nlet z = tuple.2;","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6t2ecca280","created":1532621746264,"text":"用.索引，不象数组用[]","font-family":"andale mono"},"children":[]}]}]}]},{"data":{"id":"bnsn0jv8ze80","created":1534838993949,"text":"const","expandState":"collapse"},"children":[{"data":{"id":"bnsn1dmkag80","created":1534839058727,"text":"const N: i32 = 5;","expandState":"collapse"},"children":[{"data":{"id":"bnsn196vcxc0","created":1534839049071,"text":"必须标注const的类型"},"children":[]},{"data":{"id":"bnsn8hq6u5c0","created":1534839616203,"text":"必须只能被赋予一个常量表达式的值"},"children":[]},{"data":{"id":"bnsn1k8x6zs0","created":1534839073140,"text":"常量贯穿于整个程序的生命周期"},"children":[]},{"data":{"id":"bnsn1ob3qow0","created":1534839081979,"text":"Rust 中的常量并没有固定的内存地址，它们会被内联到用到它们的地方"},"children":[]},{"data":{"id":"bnsn1xxbsr40","created":1534839102914,"text":"对同一常量的引用并不能保证引用到相同的内存地址 "},"children":[]}]}]},{"data":{"id":"bnsn11o1ku00","created":1534839032695,"text":"static","expandState":"collapse"},"children":[{"data":{"id":"bnsn39kn7bs0","created":1534839206632,"text":"static N: i32 = 5;","expandState":"expand"},"children":[{"data":{"id":"bnsn2p7qwtc0","created":1534839162317,"text":"以静态量的方式提供类似“全局变量”功能"},"children":[]},{"data":{"id":"bnsn32c24sg0","created":1534839190876,"text":"每一个值只有一个实例，并且位于内存中的固定位置"},"children":[]},{"data":{"id":"bnsn3dw8etk0","created":1534839216040,"text":"必须标注一个static的类型"},"children":[]},{"data":{"id":"bnsn888mtps0","created":1534839595550,"text":"必须只能被赋予一个常量表达式的值"},"children":[]}]},{"data":{"id":"bnsn462arps0","created":1534839277357,"text":"可变性","expandState":"expand"},"children":[{"data":{"id":"bnsn705dx2w0","created":1534839499575,"text":"static mut N: i32 = 5;"},"children":[{"data":{"id":"bnsn79z9ihk0","created":1534839520973,"text":"因为这是可变的，一个线程可能在更新N同时另一个在读取它，导致内存不安全。"},"children":[]},{"data":{"id":"bnsn7g3y1fk0","created":1534839534317,"text":"因此访问和改变一个static mut是不安全（unsafe）\n的，因此必须在unsafe块中操作"},"children":[]}]},{"data":{"id":"bnsn7mvyqk80","created":1534839549072,"text":"unsafe {\n\tN += 1;\n\tprintln!(\"N: {}\", N);\n}"},"children":[]}]}]},{"data":{"id":"bnsnh9ao8ow0","created":1534840303128,"text":"type别名","expandState":"collapse"},"children":[{"data":{"id":"bnsnio722e80","created":1534840413925,"text":"两个不同类型的比较会失败，但别名不会"},"children":[]}]},{"data":{"id":"bmvqhybmsm80","created":1531497342365,"text":"转换","font-family":"andale mono","font-size":12,"expandState":"collapse"},"children":[{"data":{"id":"bmvqjn9mynk0","created":1531497475028,"text":"强制","font-family":"andale mono","font-size":12,"expandState":"collapse"},"children":[{"data":{"id":"bmvqmhx3djk0","created":1531497698478,"text":"出现位置","expandState":"expand","font-family":"andale mono","font-size":12},"children":[{"data":{"id":"bmvqmmgfas80","created":1531497708354,"text":"let","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[]},{"data":{"id":"bmvqmocl2ds0","created":1531497712476,"text":"const","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[]},{"data":{"id":"bmvqmq15c0g0","created":1531497716138,"text":"static","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[]},{"data":{"id":"bmvqmrkzuqw0","created":1531497719514,"text":"函数调用参数","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[]},{"data":{"id":"bmvqmvjhba80","created":1531497728130,"text":"结构体初始化字符串","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[]},{"data":{"id":"bmvqn26k2cg0","created":1531497742586,"text":"函数返回值","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[]}]},{"data":{"id":"bmvqnckphow0","created":1531497765209,"text":"常见应用","font-family":"andale mono","font-size":12,"expandState":"expand"},"children":[{"data":{"id":"bmvqnq1kzag0","created":1531497794528,"text":"去掉可变性","font-family":"andale mono","font-size":12},"children":[{"data":{"id":"bmvqnvxeex40","created":1531497807336,"text":"&mut T 到 &T","font-family":"andale mono","font-size":12},"children":[]}]},{"data":{"id":"bmvqpjsy46o0","created":1531497937673,"text":"去掉裸指针可变性","font-family":"andale mono","font-size":12},"children":[{"data":{"id":"bmvqptdgsi80","created":1531497958505,"text":"*mut T 到 *const T","font-family":"andale mono","font-size":12},"children":[]}]},{"data":{"id":"bmvqrqobaj40","created":1531498109359,"text":"引用转裸指针","font-family":"andale mono"},"children":[{"data":{"id":"bmvqsqgnrnc0","created":1531498187260,"text":"&T 到 *const T","font-family":"andale mono"},"children":[]},{"data":{"id":"bmvqsy7e93k0","created":1531498204115,"text":"&mut T 到 *mut T","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bmvqt9if57c0","created":1531498228727,"text":"自定义强转可以用 Deref 定义","font-family":"andale mono"},"children":[]}]}]},{"data":{"id":"bmvqi878i740","created":1531497363867,"text":"as","font-family":"andale mono","font-size":12,"expandState":"collapse"},"children":[{"data":{"id":"bnsnjmkasjc0","created":1534840488736,"text":"类型间的强制转换","expandState":"expand"},"children":[{"data":{"id":"bnsnk1l18kw0","created":1534840521432,"text":"let x: i32 = 5;\nlet y = x as i64;"},"children":[]}]},{"data":{"id":"bnsnm92ag1s0","created":1534840694442,"text":"数值转换"},"children":[{"data":{"id":"bnsnmcrvtyw0","created":1534840702520,"text":"let one = true as u8;\nlet at_sign = 64 as char;\nlet two_hundred = -56i8 as u8;"},"children":[]}]},{"data":{"id":"bnsnn353p9s0","created":1534840759915,"text":"指针转换","expandState":"expand"},"children":[{"data":{"id":"bnsnnjn5e400","created":1534840795835,"text":"规则","expandState":"expand"},"children":[{"data":{"id":"bnsnnlkqkyg0","created":1534840800043,"text":"裸指针与整型之间的转换是安全的"},"children":[]},{"data":{"id":"bnsnnrntr3s0","created":1534840813290,"text":"不同类型的指针之间的转换遵循一些限制"},"children":[]},{"data":{"id":"bnsnnxkf64o0","created":1534840826145,"text":"只有解引用指针是不安全的"},"children":[]}]},{"data":{"id":"bnsnoinum4w0","created":1534840872065,"text":"let a = 300 as *const char; // `a` is a pointer to location 300.\nlet b = a as u32;"},"children":[]}]}]},{"data":{"id":"bmvqia1kesw0","created":1531497367878,"text":"transmute","font-family":"andale mono","font-size":12,"expandState":"collapse"},"children":[{"data":{"id":"bnsnprdis9k0","created":1534840969395,"text":"as只允许安全的转换，并会拒绝例如尝试将 4 个字节转换为一个u32"},"children":[{"data":{"id":"bnsnpvmpigo0","created":1534840978658,"text":"let a = [0u8, 0u8, 0u8, 0u8];\nlet b = a as u32; // Four u8s makes a u32.\n//error: non-scalar cast: `[u8; 4]` as `u32`"},"children":[]}]},{"data":{"id":"bnsnujb7j6o0","created":1534841343662,"text":"transmute函数由编译器固有功能提供，它告诉Rust对待一个类型的值就像它是另一个类型一样。\n它这样做并不管类型检查系统，并完全信任你。"},"children":[]},{"data":{"id":"bnsnvvyyqc00","created":1534841449584,"text":"示例","expandState":"collapse"},"children":[{"data":{"id":"bnsnvxltl280","created":1534841453143,"text":"use std::mem;\nfn main() {\n\tunsafe {\n\t    let a = [0u8, 1u8, 0u8, 0u8];\n\t    let b = mem::transmute::<[u8; 4], u32>(a);\n\t    println!(\"{}\", b); // 256        // Or, more concisely:        let c: u32 = mem::transmute(a);\n\t    println!(\"{}\", c); // 256\n\t}\n}"},"children":[]}]}]}]},{"data":{"id":"bnq46cs94740","created":1534582727714,"text":"泛型","expandState":"collapse"},"children":[{"data":{"id":"bnq46wv4x2go","created":1534582771424,"text":"特性"},"children":[{"data":{"id":"bnq47adcvz4k","created":1534582800825,"text":"泛型在类型理论中叫做参数多态"},"children":[]}]},{"data":{"id":"bnq4dk0pnhcg","created":1534583292013,"text":"标准库提供的泛型","expandState":"collapse"},"children":[{"data":{"id":"bnq48n1u9pko","created":1534582906790,"text":"Option<T>"},"children":[{"data":{"id":"bnq493tnva8k","created":1534582943300,"text":"enum Option<T> {\n\tSome(T),\n\tNone,\n};\nlet x: Option<i32> = Some(5); ","font-family":"arial,helvetica,sans-serif"},"children":[]}]},{"data":{"id":"bnq4bh5467sw","created":1534583129019,"text":"enum Result<T, E> {\n\tOk(T),\n\tErr(E),\n}"},"children":[]}]},{"data":{"id":"bnq4e3kh2680","created":1534583334566,"text":"泛型函数","expandState":"collapse"},"children":[{"data":{"id":"bnq4e9qf1dkw","created":1534583347986,"text":"fn foo<T>(x: T, y: T) {}"},"children":[]},{"data":{"id":"bnq4f0hkb4wg","created":1534583406223,"text":"fn bar<T, U>(x: T, y: U){}"},"children":[]}]},{"data":{"id":"bnq4fnjjg8w0","created":1534583456409,"text":"泛型结构体"},"children":[{"data":{"id":"bnq4fxqzvzsw","created":1534583478628,"text":"示例","expandState":"collapse"},"children":[{"data":{"id":"bnq4g2h9e1kc","created":1534583488923,"text":"struct Point<T> {\n\tx: T,\n\ty: T,\n}\nimpl<T> Point<T> {\n\tfn swap(&mut self) {\n\t    std::mem::swap(&mut self.x, &mut self.y);\n\t}\n}\nlet int_origin = Point { x: 0, y: 0 };\nlet float_origin = Point { x: 0.0, y: 0.0 };"},"children":[]}]}]},{"data":{"id":"bnq4i9qkgs0s","created":1534583661451,"text":"消除歧义"},"children":[{"data":{"id":"bnqpdi3stg08","created":1534642531153,"text":"一般情况下可自行推导出泛型参数 ","expandState":"expand"},"children":[{"data":{"id":"bnq4idqkgygc","created":1534583670159,"text":"let mut v = Vec::new();\nv.push(true);\nprintln!(\"{:?}\", v);"},"children":[]}]},{"data":{"id":"bnqpfk3ax14w","created":1534642692205,"text":"无法推导情况下用类型注解"},"children":[{"data":{"id":"bnqpg1uizbsc","created":1534642730856,"text":"let v: Vec<bool> = Vec::new();\nprintln!(\"{:?}\", v);"},"children":[]}]}]}]}]},{"data":{"id":"bn6t4tftfts0","created":1532621935853,"text":"语句/语义/表达式","expandState":"collapse","font-family":"andale mono"},"children":[{"data":{"id":"bn6t4uxilg80","created":1532621939100,"text":"注释","expandState":"collapse","font-family":"andale mono"},"children":[{"data":{"id":"bn6t4z1bb600","created":1532621948037,"text":"//单行","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6t53qyep40","created":1532621958294,"text":"///文档注释","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6t5hinv8o0","created":1532621988268,"text":"//! crate，模块或者函数注释，常用在 crate 根文件（lib.rs）或者模块根文件（mod.rs）","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn6t6ltrjvc0","created":1532622076010,"text":"if","expandState":"collapse","font-family":"andale mono"},"children":[{"data":{"id":"bn6t960n2340","created":1532622276690,"text":"let x = 5;\nif x == 5 {\n\tprintln!(\"x is five!\");\n} else if x == 6 {\n\tprintln!(\"x is six!\");\n} else {\n\tprintln!(\"x is not five or six :(\");\n}","font-family":"andale mono"},"children":[]},{"data":{"id":"bn6t9uncpcw0","created":1532622330306,"text":"let y = if x == 5 { 10 } else { 15 }; // y: i32","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8ece13tnc0","created":1532783332490,"text":"循环","expandState":"collapse","font-family":"andale mono"},"children":[{"data":{"id":"bn8ecg9saoo0","created":1532783337368,"text":"loop {}","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8eco8k31c0","created":1532783354708,"text":"while true {  }","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8ed02ok9k0","created":1532783380474,"text":"for","font-family":"andale mono"},"children":[{"data":{"id":"bn8ed3qgugg0","created":1532783388443,"text":"for ( x-0; x<10; x++) {   }","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8edf1tmsw0","created":1532783413074,"text":"for x in 0..10 {   }","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8edonxs880","created":1532783434002,"text":"for var in expresion","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8efv0mdeo0","created":1532783604558,"text":"Enumerate","font-family":"andale mono"},"children":[{"data":{"id":"bn8eghy4ir40","created":1532783654473,"text":"循环次数","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8egwbjlg80","created":1532783685760,"text":"for (index, value) in (5..10).enumerate() {.....}","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8ehhd21ao0","created":1532783731564,"text":"for (line_number, line)  in lines.enumerate() {.....}","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8eidxau7s0","created":1532783802445,"text":"提前结束循环","font-family":"andale mono"},"children":[{"data":{"id":"bn8eijsiuqo0","created":1532783815216,"text":"break","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8eio8gh3c0","created":1532783824887,"text":"continue","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8ejac4zmw0","created":1532783872999,"text":"循环标签","font-family":"andale mono"},"children":[{"data":{"id":"bn8ejji8eqw0","created":1532783892958,"text":"'outer:   for x in 0..10 {\n'inner for y in 0..10{\nif x%2 ==0 { continue 'outer;}\nif y%2 ==0 {continue 'inner;}\n}\n}","font-family":"andale mono"},"children":[]}]}]},{"data":{"id":"bnp7dzuiinsw","created":1534490229839,"text":"匹配","expandState":"collapse"},"children":[{"data":{"id":"bnp7e9vyhdds","created":1534490251694,"text":"特性","expandState":"expand"},"children":[{"data":{"id":"bnp7gu2y6iv4","created":1534490452381,"text":"强制穷尽检查，如果模式未能匹配所有可能值，会得到一个编译时错误"},"children":[]},{"data":{"id":"bnp7kbmjd4w0","created":1534490725663,"text":"_  匹配没有match分支捕获的所有值"},"children":[]}]},{"data":{"id":"bnp7hods7sao","created":1534490518339,"text":"示例","expandState":"collapse"},"children":[{"data":{"id":"bnp7hvcvlclc","created":1534490533522,"text":"let x = 5;\nmatch x {\n\t1 => println!(\"one\"),\n\t2 => println!(\"two\"),\n\t3 => println!(\"three\"),\n\t4 => println!(\"four\"),\n\t5 => println!(\"five\"),\n\t_ => println!(\"something else\"),\n}"},"children":[]}]},{"data":{"id":"bnp7obzp48w0","created":1534491039915,"text":"匹配枚举"},"children":[{"data":{"id":"bnp7p0lgtreo","created":1534491093474,"text":"fn process_message(msg: Message) {\n\tmatch msg {\n\t    Message::Quit => quit(),\n\t    Message::ChangeColor(r, g, b) => change_color(r, g, b),\n\t    Message::Move { x, y: new_name_for_y } => move_cursor(x, new_name_for_y),\n\t    Message::Write(s) => println!(\"{}\", s),\n\t};\n}"},"children":[]}]}]},{"data":{"id":"bnp7r4y7rj0g","created":1534491259680,"text":"模式(绑定)","expandState":"collapse"},"children":[{"data":{"id":"bnp7y4xq2e4g","created":1534491808200,"text":"匹配常量（见匹配章示例）"},"children":[]},{"data":{"id":"bnp7yyqy81z4","created":1534491873094,"text":"创建值绑定","expandState":"collapse"},"children":[{"data":{"id":"bnp7z8jxvu2o","created":1534491894438,"text":"let x = 1;\nmatch x {\n\ty => println!(\"x: {} y: {}\", x, y),//会打印 x: 1 y: 1\n//_ => println!(\"anything\"), // this causes an error as it is unreachable\n}"},"children":[]},{"data":{"id":"bnp8bp82i9s0","created":1534492871095,"text":"规则","expandState":"collapse"},"children":[{"data":{"id":"bnp80csim1og","created":1534491982028,"text":"在同一匹配块中，同时拥有捕获全部的_，和捕获全部的绑定，会产生错误"},"children":[]},{"data":{"id":"bnp8biycyxa8","created":1534492857447,"text":"绑定的作用域在匹配分支中有效"},"children":[]}]}]},{"data":{"id":"bnp8diiejbi8","created":1534493013211,"text":"| 多重模式","expandState":"collapse"},"children":[{"data":{"id":"bnp8coqdeneo","created":1534492948389,"text":"用 | 匹配多个模式","expandState":"expand"},"children":[]},{"data":{"id":"bnp8d09j21hc","created":1534492973492,"text":"match x {\n\t1 | 2 => println!(\"one or two\"),\n\t3 => println!(\"three\"),\n\t_ => println!(\"anything\"),\n}"},"children":[]}]},{"data":{"id":"bnp8ezl0ozr4","created":1534493128738,"text":"解构(复合数据类型)","expandState":"collapse"},"children":[{"data":{"id":"bnp8netcmpds","created":1534493788807,"text":"示例","expandState":"expand"},"children":[{"data":{"id":"bnp8fkwhquww","created":1534493175145,"text":"struct Point {\n\tx: i32,\n\ty: i32,\n}\nlet origin = Point { x: 0, y: 0 };\nmatch origin {\n\tPoint { x, y } => println!(\"({},{})\", x, y),\n}"},"children":[]}]},{"data":{"id":"bnp8fygajjls","created":1534493204640,"text":"给出不同名字","expandState":"expand"},"children":[{"data":{"id":"bnp8g1qkdpts","created":1534493211792,"text":"Point { x: x1, y: y1 } => println!(\"({},{})\", x1, y1),"},"children":[]}]},{"data":{"id":"bnp8gantbitc","created":1534493231216,"text":"部分绑定","expandState":"expand"},"children":[{"data":{"id":"bnp8ge89nklc","created":1534493238983,"text":"Point { y, .. } => println!(\"y is {}\", y),"},"children":[]}]}]},{"data":{"id":"bnp8h467ecqo","created":1534493295455,"text":"忽略绑定","expandState":"collapse"},"children":[{"data":{"id":"bnp8mqowh534","created":1534493736296,"text":"元组","expandState":"expand"},"children":[{"data":{"id":"bnp8mvzyllvk","created":1534493747848,"text":"fn coordinate() -> (i32, i32, i32) {\n\t// ...\n# (1, 2, 3)\n}\nlet (x, _, z) = coordinate();"},"children":[]}]},{"data":{"id":"bnp8o344nwn4","created":1534493841702,"text":"Enum","expandState":"expand"},"children":[{"data":{"id":"bnp8o72jam80","created":1534493850313,"text":"let some_value: Result<i32, &'static str> = Err(\"There was an error\");\nmatch some_value {\n\tOk(value) => println!(\"got a value: {}\", value),\n\tErr(_) => println!(\"an error occurred\"),\n}"},"children":[]}]},{"data":{"id":"bnp8v5pmem80","created":1534494395904,"text":"所有权转移","expandState":"collapse"},"children":[{"data":{"id":"bnp8vcnsyio0","created":1534494411032,"text":"let tuple: (u32, String) = (5, String::from(\"five\"));\n// 以下语句实现所有权转移\nlet (x, s) = tuple;\n//错误，不能再使用\nprintln!(\"Tuple is: {:?}\", tuple);"},"children":[]},{"data":{"id":"bnp8x9vi8v7k","created":1534494561695,"text":"let (x, _) = tuple;//未转移\nprintln!(\"Tuple is: {:?}\", tuple);//可以工作"},"children":[]},{"data":{"id":"bnp8y8xi91q8","created":1534494638004,"text":"//下例中字符串创建后，马上被删除\nlet _ = String::from(\"hello\");"},"children":[]}]},{"data":{"id":"bnp8ztwwalts","created":1534494762043,"text":"用..来忽略多个值","expandState":"collapse"},"children":[{"data":{"id":"bnp8zxvn9hc0","created":1534494770675,"text":"enum OptionalTuple {\n\tValue(i32, i32, i32),\n\tMissing,\n}\n\nlet x = OptionalTuple::Value(5, -2, 3);\n\nmatch x {\n\tOptionalTuple::Value(..) => println!(\"Got a tuple!\"),\n\tOptionalTuple::Missing => println!(\"No such luck.\"),\n}"},"children":[]}]}]},{"data":{"id":"bnp96mlo016o","created":1534495294676,"text":"ref和ref mut","expandState":"collapse"},"children":[{"data":{"id":"bnp96qhrbfgg","created":1534495303147,"text":"let mut x = 5;\n\nmatch x {\n\tref r => println!(\"Got a reference to {}\", r),\n}\n\nmatch x {\n\tref mut mr => println!(\"Got a mutable reference to {}\", mr),\n}"},"children":[]}]},{"data":{"id":"bnp97a7ya7eo","created":1534495346090,"text":"...匹配范围","expandState":"collapse"},"children":[{"data":{"id":"bnp981b5rdvk","created":1534495405058,"text":"范围经常用在整数和char上"},"children":[]},{"data":{"id":"bnp97ryzcagw","created":1534495384729,"text":"let x = 1;\nmatch x {\n\t1 ... 5 => println!(\"one through five\"),\n\t_ => println!(\"anything\"),\n}"},"children":[]},{"data":{"id":"bnp9861kn3sw","created":1534495415361,"text":"let x = '💅';\nmatch x {\n\t'a' ... 'j' => println!(\"early letter\"),\n\t'k' ... 'z' => println!(\"late letter\"),\n\t_ => println!(\"something else\"),\n}"},"children":[]}]},{"data":{"id":"bnp99cfkbe2o","created":1534495507632,"text":"...范围@绑定","expandState":"collapse"},"children":[{"data":{"id":"bnp99km7cohs","created":1534495525447,"text":"let x = 1;\nmatch x {\n\te @ 1 ... 5 => println!(\"got a range element {}\", e),\n\t_ => println!(\"anything\"),\n}"},"children":[]}]},{"data":{"id":"bnp9e1e7l534","created":1534495875426,"text":"| 多重模式 @绑定","expandState":"collapse"},"children":[{"data":{"id":"bnp9eafsvfnk","created":1534495895113,"text":"e @ 1 ... 5 | e @ 8 ... 10 => println!(\"got a range element {}\", e),"},"children":[]}]},{"data":{"id":"bnp9enzgfaps","created":1534495924600,"text":"复杂模式","expandState":"collapse"},"children":[{"data":{"id":"bnp9euodr4e8","created":1534495939168,"text":"#[derive(Debug)]struct Person {\n\tname: Option<String>,\n}\n\nlet name = \"Steve\".to_string();\nlet x: Option<Person> = Some(Person { name: Some(name) });\nmatch x {\n\tSome(Person { name: ref a @ Some(_), .. }) => println!(\"{:?}\", a),\n\t_ => {}\n}"},"children":[]}]},{"data":{"id":"bnp9g7o9g5j4","created":1534496045823,"text":"if 守卫","expandState":"collapse"},"children":[{"data":{"id":"bnp9k61k40sg","created":1534496355730,"text":"示例1","expandState":"expand"},"children":[{"data":{"id":"bnp9h6fzk1kw","created":1534496121510,"text":"enum OptionalInt {  Value(i32),  Missing,}\nlet x = OptionalInt::Value(5);\nmatch x {\n\tOptionalInt::Value(i) if i > 5 => println!(\"Got an int bigger than five!\"),\n\tOptionalInt::Value(..) => println!(\"Got an int!\"),\n\tOptionalInt::Missing => println!(\"No such luck.\"),\n}"},"children":[]}]},{"data":{"id":"bnp9kdg4pudc","created":1534496371849,"text":"示例2","expandState":"expand"},"children":[{"data":{"id":"bnp9jnih3sw0","created":1534496315394,"text":"let x = 4;\nlet y = false;\nmatch x {\n\t4 | 5 if y => println!(\"yes\"),\n\t_ => println!(\"no\"),\n}\n//这会打印no，因为if适用于整个4 | 5，而不仅仅是5"},"children":[]},{"data":{"id":"bnp9ko28s8ow","created":1534496394954,"text":"if语句的优先级是这样的：(4 | 5) if y => ..."},"children":[]}]}]},{"data":{"id":"bnp9l2ahy5ts","created":1534496425928,"text":"混合与匹配"},"children":[{"data":{"id":"bnp9ldc38w74","created":1534496449968,"text":"根据你的需求，你可以对上面的多种匹配方法进行组合"},"children":[]},{"data":{"id":"bnp9lgl1qv40","created":1534496457040,"text":"match x {\n\tFoo { x: Some(ref name), y: None } => ...\n}"},"children":[]}]}]},{"data":{"id":"bnrrxycpr600","created":1534751335980,"text":"if let匹配","expandState":"collapse"},"children":[{"data":{"id":"bnrry1lm2z40","created":1534751343049,"text":"简化模式匹配的开销"},"children":[]},{"data":{"id":"bnrryeed82g0","created":1534751370909,"text":"示例","expandState":"collapse"},"children":[{"data":{"id":"bnrs0z962m80","created":1534751573035,"text":"let option = Some(5);\nfn foo(x: i32) { }\n#匹配1\nmatch option {\n\tSome(x) => { foo(x) },\n\tNone => {},\n}\n#匹配2\nif option.is_some() {\n\tlet x = option.unwrap();\n\tfoo(x);\n}\n#最终\nif let Some(x) = option {\n\tfoo(x);\n}"},"children":[]}]},{"data":{"id":"bnrs6cthp400","created":1534751994383,"text":"while let","expandState":"collapse"},"children":[{"data":{"id":"bnrs6l04jw80","created":1534752012198,"text":"let mut v = vec![1, 3, 5, 7, 11];\nwhile let Some(x) = v.pop() {\n\tprintln!(\"{}\", x);\n}"},"children":[]}]}]}]},{"data":{"id":"bn8em2yigdc0","created":1532784092030,"text":"复合数据结构","font-family":"andale mono","expandState":"collapse"},"children":[{"data":{"id":"bn8eme80za00","created":1532784116550,"text":"Vector","font-family":"andale mono","expandState":"collapse"},"children":[{"data":{"id":"bn8en83niqg0","created":1532784181590,"text":"特性","expandState":"expand","font-family":"andale mono"},"children":[{"data":{"id":"bn8enbt3ls00","created":1532784189658,"text":"堆上分配","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8eni8gdag0","created":1532784203647,"text":"Vec<T> 泛型","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8eveqp3e00","created":1532784822956,"text":"索引值须为usize类型"},"children":[]}]},{"data":{"id":"bn8enwfs3i80","created":1532784234565,"text":"创建","font-family":"andale mono"},"children":[{"data":{"id":"bn8enyw608o0","created":1532784239909,"text":"let v = vec![1,2,3,4,5];  //v: Vec<i32>","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8epixotbs0","created":1532784361901,"text":"let v = vec![0; 10];  //初始化10个为0的数组","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8etiqd9rc0","created":1532784674915,"text":"访问"},"children":[{"data":{"id":"bn8etmi8ots0","created":1532784683131,"text":"v[2]","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8ew33n8hc0","created":1532784875982,"text":"let i:usize = 0;   v[i];","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8ewvv5ajc0","created":1532784938595,"text":"越界访问"},"children":[{"data":{"id":"bn8ex17oc800","created":1532784950236,"text":"v[7]  当前线程会panic并输出错误","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8exu6xys80","created":1532785013319,"text":"get/get_mut   无效索引时返回None"},"children":[{"data":{"id":"bn8eybf7x4g0","created":1532785050824,"text":"match  v.get(7) {    \nSome(x)  => println!( \"Item 7 is {}\", x),\nNone => println!(\"索引无效\")\n}","font-family":"andale mono"},"children":[]}]}]},{"data":{"id":"bn8ezvlyd8o0","created":1532785173131,"text":"迭代"},"children":[{"data":{"id":"bn8f00vy00g0","created":1532785184619,"text":"for i in v {...}   //只能使用v循环1次","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8f0fvv1x40","created":1532785217266,"text":"for i in &v {...}  //任意次循环v","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8f0szsf1c0","created":1532785245802,"text":"for i in &mut v {...} //","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8g1acmr5k0","created":1532788104694,"text":"常用方法"},"children":[{"data":{"id":"bn8g1dw8e4o0","created":1532788112409,"text":"truncate"},"children":[{"data":{"id":"bn8g1joy0u00","created":1532788125029,"text":"v.truncate(2);//用索引删除元素"},"children":[]}]},{"data":{"id":"bn8gim7lpq80","created":1532789462702,"text":"push"},"children":[{"data":{"id":"bn8giob2j5k0","created":1532789467265,"text":"v.push(5);//添加元素"},"children":[]}]}]}]},{"data":{"id":"bnodqbt9eqkg","created":1534406562957,"text":"结构休","expandState":"collapse"},"children":[{"data":{"id":"bnodrf5bt5a8","created":1534406648581,"text":"特性","expandState":"collapse"},"children":[{"data":{"id":"bnodrs8kvzls","created":1534406677076,"text":"根据传统，结构体使用大写字母开头并且使用驼峰命名法：PointInSpace而不要写成Point_In_Space。"},"children":[]},{"data":{"id":"bnodt6dq59fk","created":1534406786226,"text":"不支持字段可变性，可变性是绑定的一个属性，不是结构体自身的。"},"children":[]},{"data":{"id":"bnodujpj5ybk","created":1534406893602,"text":"结构体仍然可以包含&mut指针，它会给你一些类型的可变性"},"children":[]}]},{"data":{"id":"bnoese0j3klc","created":1534409545588,"text":"更新语法","expandState":"collapse"},"children":[{"data":{"id":"bnoesnz26nsw","created":1534409567267,"text":"包含..的struct"},"children":[]},{"data":{"id":"bnoez3ujf56o","created":1534410072007,"text":"struct Point3d {\n\tx: i32,\n\ty: i32,\n\tz: i32,\n}\n\nlet mut point = Point3d { x: 0, y: 0, z: 0 };\npoint = Point3d { y: 1, .. point };\nlet point2 = Point3d { z: 1, x: 2, .. origin };"},"children":[]}]},{"data":{"id":"bnof0zql34lc","created":1534410219789,"text":"元组结构体","expandState":"collapse"},"children":[{"data":{"id":"bnof1hf3mtj4","created":1534410258277,"text":"struct Color(i32, i32, i32);\nstruct Point(i32, i32, i32);\n\nlet black = Color(0, 0, 0);\nlet origin = Point(0, 0, 0);\n\nlet black_r = black.0;\nlet Point(_, origin_y, origin_z) = origin;"},"children":[]},{"data":{"id":"bnof4kyf1jb4","created":1534410501068,"text":"一个元组结构体非常有用的情况是当他只有一个元素时，我们称之为“新类型（newtype）”模式，因为它允许创建一个区别于它包含的值的类型"},"children":[]},{"data":{"id":"bnp0ek7iz75s","created":1534470526392,"text":"struct Inches(i32);\nlet length = Inches(10);\nlet Inches(integer_length) = length;\n//let inter_length = length.0\nprintln!(\"length is {} inches\", integer_length);"},"children":[]}]},{"data":{"id":"bnp2vbnyii2o","created":1534477482205,"text":"类单元结构体（Unit-like structs）","expandState":"collapse"},"children":[{"data":{"id":"bnp2vilvgoao","created":1534477497316,"text":"一个没有任何成员的结构体，不需要存储任何数据"},"children":[]},{"data":{"id":"bnp6jrxskc8w","created":1534487861698,"text":"struct Electron {} // Use empty braces...\nstruct Proton;     // ...or just a semicolon.\n// Use the same notation when creating an instance.\nlet x = Electron {};\nlet y = Proton;\nlet z = Electron; // Error"},"children":[]},{"data":{"id":"bnp6itbr8w74","created":1534487786355,"text":"可能实现了一个特定特性来处理事件"},"children":[]}]}]},{"data":{"id":"bnp6skif6xa8","created":1534488550808,"text":"枚举","expandState":"collapse"},"children":[{"data":{"id":"bnp6sz4z69ds","created":1534488582647,"text":"特性","expandState":"collapse"},"children":[{"data":{"id":"bnp6t0x9abcw","created":1534488586534,"text":"Rust中枚举代表数个可能变量的数据结构类型"},"children":[]},{"data":{"id":"bnp6vbdcybr4","created":1534488766004,"text":"存储参数c/c++中的union类型，内存存储的长度取决于最长的field"},"children":[]}]},{"data":{"id":"bnp6xtihoqgw","created":1534488962224,"text":"示例","expandState":"expand"},"children":[{"data":{"id":"bnp75x0dszcw","created":1534489596750,"text":"enum Message {\n\tQuit,\n\tChangeColor(i32, i32, i32),\n\tMove { x: i32, y: i32 },\n\tWrite(String),\n}\nlet m: Message = Message::Move { x:3, y:4}"},"children":[]}]},{"data":{"id":"bnp75cgxvu9s","created":1534489552039,"text":"解构","expandState":"collapse"},"children":[{"data":{"id":"bnp75pl9cphc","created":1534489580598,"text":"fn process_color_change(msg: Message) {\n\tlet Message::ChangeColor(r, g, b) = msg; // This causes a compile-time error.\n}"},"children":[]}]},{"data":{"id":"bnp76rbddbsw","created":1534489662718,"text":"构造器作为函数"},"children":[{"data":{"id":"bnp77yhfahog","created":1534489756685,"text":"let m = Message::Write(\"Hello, world\".to_string());"},"children":[]},{"data":{"id":"bnp79jdhtmo0","created":1534489880524,"text":"let v = vec![\"Hello\".to_string(), \"World\".to_string()];\nlet v1: Vec<Message> = v.into_iter().map(Message::Write).collect();"},"children":[]}]}]},{"data":{"id":"bnpa5h8o6n7k","created":1534498025752,"text":"字符串","expandState":"collapse"},"children":[{"data":{"id":"bnpa715n9d6o","created":1534498147469,"text":"类型","expandState":"collapse"},"children":[{"data":{"id":"bnpa75lv7cw0","created":1534498157157,"text":"String"},"children":[{"data":{"id":"bnpadmqko6ps","created":1534498664632,"text":"String通常通过一个字符串片段调用to_string方法转换而来"},"children":[]}]},{"data":{"id":"bnpa76wpdkhs","created":1534498159989,"text":"&str"},"children":[{"data":{"id":"bnpad64axa0w","created":1534498628457,"text":"通常你不能直接访问一个str，只能通过&str引用。这是因为str是一个不定长类型，它需要额外的运行时信息才能使用"},"children":[]}]},{"data":{"id":"bnpa7h3kmdj4","created":1534498182172,"text":"字符串常量是&'static str类型"},"children":[]}]},{"data":{"id":"bnpa9qieahvk","created":1534498359388,"text":"特性","expandState":"collapse"},"children":[{"data":{"id":"bnpa9tniuuio","created":1534498366228,"text":"字符串常量可以跨多行","expandState":"expand"},"children":[{"data":{"id":"bnpa9yiy38qo","created":1534498376835,"text":"let s = \"foo\nhello \""},"children":[]},{"data":{"id":"bnpaasyu3f28","created":1534498443100,"text":"let s = \"foo\\\nbar\";"},"children":[]}]},{"data":{"id":"bnpae8jj60ow","created":1534498712095,"text":"String可以通过一个&强制转换为&str"},"children":[{"data":{"id":"bnpaef5mp0jk","created":1534498726492,"text":"fn takes_slice(slice: &str) {\n\tprintln!(\"Got: {}\", slice);\n}\n\nfn main() {\n\tlet s = \"Hello\".to_string();\n\ttakes_slice(&s);\n}"},"children":[]}]},{"data":{"id":"bnpag4zj95vk","created":1534498861084,"text":"把String转换为&str的代价很小，不过从&str转换到String涉及到分配内存。除非必要，没有理由这样做！"},"children":[]},{"data":{"id":"bnpagjohhj40","created":1534498893068,"text":"示例"},"children":[{"data":{"id":"bnpagmn9ocn4","created":1534498899524,"text":"use std::net::TcpStream;\n\nTcpStream::connect(\"192.168.0.1:3000\"); // Parameter is of type &str.\nlet addr_string = \"192.168.0.1:3000\".to_string();\nTcpStream::connect(&*addr_string); // Convert `addr_string` to &str."},"children":[]}]}]},{"data":{"id":"bnpai55bnz7k","created":1534499018162,"text":"索引访问字符","expandState":"expand"},"children":[{"data":{"id":"bnpaibp70rgg","created":1534499032426,"text":"let hachiko = \"忠犬ハチ公\";"},"children":[]},{"data":{"id":"bnpaik8ythj4","created":1534499051034,"text":"字节byte","expandState":"expand"},"children":[{"data":{"id":"bnpainjm8hds","created":1534499058209,"text":"for b in hachiko.as_bytes() {\n\tprint!(\"{}, \", b);\n}\n//229, 191, 160, 231, 138, 172, 227, 131, 143, 227, 131, 129, 229, 133, 172,"},"children":[]}]},{"data":{"id":"bnpaj618kiyo","created":1534499098456,"text":"字符(Unicode)","expandState":"expand"},"children":[{"data":{"id":"bnpajrfe9ekg","created":1534499145025,"text":"for c in hachiko.chars() {\n\tprint!(\"{}, \", c);\n}\n//忠, 犬, ハ, チ, 公,"},"children":[]}]},{"data":{"id":"bnpak62d0ikg","created":1534499176888,"text":"nth方法"},"children":[{"data":{"id":"bnpakd7xncow","created":1534499192463,"text":"let dog = hachiko.chars().nth(1);"},"children":[]}]}]},{"data":{"id":"bnpao241rsw0","created":1534499481740,"text":"切片","expandState":"collapse"},"children":[{"data":{"id":"bnpao7bigcu8","created":1534499493075,"text":"获取一个字符串的切片","expandState":"collapse"},"children":[{"data":{"id":"bnpao9phxwqo","created":1534499498274,"text":"let dog = \"hachiko\";\nlet hachi = &dog[0..5];"},"children":[]}]},{"data":{"id":"bnpaok5d57uo","created":1534499521002,"text":"下标是字节偏移，而不是字符偏移","expandState":"collapse"},"children":[{"data":{"id":"bnpaoqwy3rwg","created":1534499535730,"text":"如下代码在运行时会失败：\nlet dog = \"忠犬ハチ公\";\nlet hachi = &dog[0..2];"},"children":[]},{"data":{"id":"bnpaovur5bsw","created":1534499546481,"text":"thread 'main' panicked at 'byte index 2 is not a char boundary; \nit is inside '忠'(bytes 0..3) of `忠犬ハチ公`'"},"children":[]}]}]},{"data":{"id":"bnpaprtsptz4","created":1534499616081,"text":"连接","expandState":"collapse"},"children":[{"data":{"id":"bnpapyvan3sw","created":1534499631409,"text":"如果你有一个String，你可以在它后面接上一个&str"},"children":[{"data":{"id":"bnpaq2jghf5s","created":1534499639401,"text":"let hello = \"Hello \".to_string();\nlet world = \"world!\";\n\nlet hello_world = hello + world;"},"children":[]}]},{"data":{"id":"bnpaq7f5g934","created":1534499650024,"text":"不过如果你有两个String，你需要一个&"},"children":[{"data":{"id":"bnpaqeinkcg0","created":1534499665473,"text":"let hello = \"Hello \".to_string();\nlet world = \"world!\".to_string();\n\nlet hello_world = hello + &world;"},"children":[]}]}]}]}]},{"data":{"id":"bn8fabdom1s0","created":1532785991101,"text":"内存安全","expandState":"collapse"},"children":[{"data":{"id":"bn8f75xkreg0","created":1532785744151,"text":"所有权","expandState":"collapse"},"children":[{"data":{"id":"bn8ferwnsvk0","created":1532786340534,"text":"原则(目标：安全及速度)","expandState":"expand"},"children":[{"data":{"id":"bn8feuoiw200","created":1532786346573,"text":"0成本开销抽象实现目标"},"children":[]},{"data":{"id":"bn8ffhaqpq80","created":1532786395805,"text":"编译时完成分析"},"children":[]},{"data":{"id":"bn8fg7yb7ds0","created":1532786453827,"text":"变量绑定时，拥有绑定值的所有权，离开作用域时绑定会被释放，无论是堆上或栈上的"},"children":[]},{"data":{"id":"bn8fippoz740","created":1532786649216,"text":"rust确保任何给定资源，正好只有一个绑定与之对应"},"children":[{"data":{"id":"bn8fj67i70w0","created":1532786685121,"text":"let v = vec![1,2,3]; \nlet v2 = v; \nv[1];//错误，所有权已转移","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8fkfhij9s0","created":1532786783682,"text":"fn tak(v: Vec<i32>) {...}\ntake(v);\nv[0];//错误，所有权已转移","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8g2fhfrco0","created":1532788194232,"text":"所有权转移给另一个绑定后，不能再使用原始绑定"},"children":[]}]},{"data":{"id":"bn8fp6m5nv40","created":1532787156192,"text":"实现细节"},"children":[{"data":{"id":"bn8fpqtlmc00","created":1532787200178,"text":"let x = 10;   //在栈上分配内存，值为10，将内存区域绑定到变量x上","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8fqsv16540","created":1532787282982,"text":"let v = vec![1,2,3];   //在栈上为vector对象v分配了内存，不过，同时在堆上同时为实际数据[1,2,3]分配了一些内存，将堆指针，\n作为栈上vector对象的一部分，我们称它为数据指针。这两部分任何时候都必须同步大小、容量 等信息，而不是分配到一块连续的内存中。何原因？","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8fxsxcn740","created":1532787831672,"text":"let mut v2 = v;  //Rust拷贝了v在栈上分配的内容到v2，该浅拷贝并未复制堆上分配的的数据。所有权转移，是为了保证只有1份指针指向通往堆上分配的实际数据。","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8g28ab5mg0","created":1532788178564,"text":"Copy类型"},"children":[{"data":{"id":"bn8g5x3lytk0","created":1532788467671,"text":"所有的基本类型都实现的Copy trait ，所有权不遵循“所有权规则”被移动。"},"children":[]},{"data":{"id":"bn8g42l4qaw0","created":1532788322886,"text":"let x = 10;\nlet y = x;"},"children":[{"data":{"id":"bn8g49oq7mo0","created":1532788338341,"text":"x为i32类型，实现了Copy Trait，结构中没有指向其它数据有指针，对它的拷贝是一个完整的拷贝。"},"children":[]}]}]}]},{"data":{"id":"bn8faid1l940","created":1532786006300,"text":"引用和借用","expandState":"collapse"},"children":[{"data":{"id":"bn8gewwbubc0","created":1532789172508,"text":"借用","expandState":"expand"},"children":[{"data":{"id":"bn8gakoj9nk0","created":1532788832459,"text":"如果每个函数调用，都获取所有权，返回时，返回时交还所有权，参数多时，会变得非常麻烦，所以才有借用的由来"},"children":[]},{"data":{"id":"bn8gf90er7c0","created":1532789198876,"text":"fn foo ( v1: &Vec<i32>, v2: &Vec<i32>) -> i32 { ... }\nlet a = foo(&v1, &v2);\n//下面继续使用 v1, v2","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8gj0ocna80","created":1532789494189,"text":"&mut 引用"},"children":[{"data":{"id":"bn8glyvcjq80","created":1532789725351,"text":"规则","expandState":"expand"},"children":[{"data":{"id":"bn8gk3p23080","created":1532789579127,"text":"允许改变借用的资源"},"children":[]},{"data":{"id":"bn8gm4kdlcg0","created":1532789737749,"text":"借用者拥有更小的作用域"},"children":[]},{"data":{"id":"bn8gmodd3bc0","created":1532789780860,"text":"对同一资源的借用，以下情况不能同时出现在同一个作用域下"},"children":[{"data":{"id":"bn8gn2tjmlc0","created":1532789812314,"text":"1个或多个不可变引用 (&T)"},"children":[]},{"data":{"id":"bn8gnkdk7740","created":1532789850529,"text":"唯一1个可变引用 (&mut T)"},"children":[]}]},{"data":{"id":"bn8go3nd4000","created":1532789892481,"text":"解释：同一作用域下，要么只有一个对资源A的可变引用，可么有N个不可变引用，但不能同时存在可变和不可变引用"},"children":[]}]},{"data":{"id":"bn8gktwtnps0","created":1532789636192,"text":"let mut x = 5;\nlet y = &mut x;  //违反规则，位于同一作用域下只允许一个可变\n*y += 1;","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8gtniz3co0","created":1532790327572,"text":"let y: &i32;\n{\n\tlet x = 5;\n\ty = &x;//违反规则，y在一个更大的作用域\n}","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8gw5sr17s0","created":1532790524073,"text":"let y: &i32;\nlet x = 5;\ny = &x;//错误，同一作用域下的资源，以声明相反的顺序被释放"},"children":[]}]}]},{"data":{"id":"bn8faq2ppb40","created":1532786023090,"text":"生命周期","expandState":"collapse"},"children":[{"data":{"id":"bn8uff9bs4g0","created":1532828708015,"text":"多生命周期","expandState":"expand"},"children":[{"data":{"id":"bn8u8shuvm00","created":1532828188279,"text":"fn skip_prefix<'a, 'b>(line: &'a str, prefix: &'b str) ->&'a str { ...}"},"children":[]}]},{"data":{"id":"bn8ufp9vio80","created":1532828729816,"text":"理解作用域"},"children":[]},{"data":{"id":"bn8ug1hx41c0","created":1532828756423,"text":"‘static特殊生命周期"},"children":[{"data":{"id":"bn8ugj1wmn40","created":1532828794637,"text":"横跨整个程序的生命周期"},"children":[]},{"data":{"id":"bn8ugrbl2fs0","created":1532828812637,"text":"let x: &'static str = \"Hello, world.\";","font-family":"andale mono"},"children":[]},{"data":{"id":"bn8uh4a842w0","created":1532828840853,"text":"static FOO: i32 = 5;\nlet x: &'static i32 = &FOO;\n//在二进制文件的数据段中保存了一个i32，而x是它的一个引用。","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bn8vidaizy00","created":1532831759936,"text":"生命周期省略"},"children":[{"data":{"id":"bn8vnjwys680","created":1532832166174,"text":"规则","expandState":"collapse"},"children":[{"data":{"id":"bn8vnmwn2ps0","created":1532832172685,"text":"每一个被省略的函数参数成为一个不同的生命周期参数。"},"children":[]},{"data":{"id":"bn8vnrjcrxc0","created":1532832182766,"text":"如果刚好有一个输入生命周期，不管是否省略，这个生命周期被赋予所有函数返回值中被省略的生命周期。"},"children":[]},{"data":{"id":"bn8vnvfbuf40","created":1532832191229,"text":"如果有多个输入生命周期，不过它们当中有一个是&self或者&mut self，self的生命周期被赋予所有省略的输出生命周期。"},"children":[]}]},{"data":{"id":"bn8voxp7rq80","created":1532832274545,"text":"例子"},"children":[{"data":{"id":"bn8vp3jpp4w0","created":1532832287273,"text":"只有与引用（例如一个包含引用的struct）相关的变量才需要生命周期。"},"children":[]}]}]}]},{"data":{"id":"bno5c3mswv40","created":1534382879175,"text":"可变性","font-family":"andale mono","expandState":"collapse"},"children":[{"data":{"id":"bno5cfrvns80","created":1534382905603,"text":"特性","font-family":"sans-serif","expandState":"expand"},"children":[{"data":{"id":"bnodlh8jh14w","created":1534406182944,"text":"rust中可变性非默认"},"children":[]},{"data":{"id":"bnodlu37po8w","created":1534406210920,"text":"可变性是借用（&mut）或者绑定（let mut）的属性之一。"},"children":[]},{"data":{"id":"bnodm6zzu77k","created":1534406239024,"text":"不能让结构休的一些字段可变，而另一些不可变","expandState":"expand"},"children":[{"data":{"id":"bnodmji39u68","created":1534406266239,"text":"struct Point {\n\tx: i32,\n\tmut y: i32, // 错误\n}","progress":null},"children":[]}]},{"data":{"id":"bnodocnkzqww","created":1534406408062,"text":"通过使用Cell<T>可以模拟字段级别的可变性"},"children":[]}]},{"data":{"id":"bno5fdqyh3k0","created":1534383136286,"text":"绑定","expandState":"collapse","font-family":"sans-serif"},"children":[{"data":{"id":"bno5d12yl8o0","created":1534382951985,"text":"let x =5;\nlet mut y=5;\ny=6;","font-family":"sans-serif"},"children":[]},{"data":{"id":"bno5ekgjxuw0","created":1534383072530,"text":"可变绑定，y值没多大变化，只是绑定变成另外一个(同类型)","font-family":"sans-serif"},"children":[]}]},{"data":{"id":"bno5fy4u7ns0","created":1534383180661,"text":"引用","expandState":"collapse","font-family":"sans-serif"},"children":[{"data":{"id":"bno5ghuunps0","created":1534383223593,"text":"可变引用的不可变绑定","expandState":"expand","font-family":"sans-serif"},"children":[{"data":{"id":"bno5g180mew0","created":1534383187384,"text":"let mut x = 5;\nlet y = &mut x;","expandState":"expand","font-family":"andale mono"},"children":[]},{"data":{"id":"bno5h3uzsu00","created":1534383271491,"text":"不可以 y = &mut z;","font-family":"andale mono"},"children":[]},{"data":{"id":"bno5hf1l4080","created":1534383295834,"text":"*y = 5;","font-family":"andale mono"},"children":[]}]},{"data":{"id":"bno5ihcfy9k0","created":1534383379208,"text":"可变引用的可变绑定","expandState":"expand","font-family":"sans-serif"},"children":[{"data":{"id":"bno5g180mew0","created":1534383187384,"text":"let mut x = 5;\nlet mut y = &mut x;","expandState":"expand","font-family":"sans-serif"},"children":[]},{"data":{"id":"bno5h3uzsu00","created":1534383271491,"text":"可以 y = &mut z;","font-family":"sans-serif"},"children":[]}]},{"data":{"id":"bno5jh113z40","created":1534383456882,"text":"mut是模式中一部分","font-family":"sans-serif"},"children":[{"data":{"id":"bno5jlipb6o0","created":1534383466658,"text":"let (mut x, y) = (5, 6);","font-family":"sans-serif"},"children":[]}]}]},{"data":{"id":"bnodd5498934","created":1534405529650,"text":"内部 vs 外部可变性","expandState":"collapse"},"children":[{"data":{"id":"bnodftinwzy8","created":1534405739493,"text":"不可变性的含义：外部可变性不可改变"},"children":[]},{"data":{"id":"bnodib8m5a80","created":1534405934795,"text":"外部可变性示例：\nuse std::sync::Arc;\nlet x = Arc::new(5);\nlet y = x.clone();  //返回&T，非&mut T"},"children":[]},{"data":{"id":"bnodjxrym29s","created":1534406062218,"text":"内部可变性示例：\nuse std::cell::RefCell;\nlet x = RefCell::new(42);\nlet y = x.borrow_mut();\n//let z = x.borrow_mut(); 会panic!"},"children":[]}]},{"data":{"id":"bnodkx3sejuo","created":1534406139121,"text":"字段级别可变性","expandState":"collapse"},"children":[{"data":{"id":"bnodnu6hemtc","created":1534406367846,"text":"struct Point {\n\tx: i32,\n\ty: i32,\n}\nlet mut a = Point { x: 5, y: 6 };\na.x = 10;\nlet b = Point { x: 5, y: 6};\nb.x = 10; // 错误： cannot assign to immutable field `b.x`"},"children":[]},{"data":{"id":"bnodoy8395a8","created":1534406455014,"text":"use std::cell::Cell;\nstruct Point {\n\tx: i32,\n\ty: Cell<i32>,\n}\nlet point = Point { x: 5, y: Cell::new(6) };\npoint.y.set(7);\nprintln!(\"y: {:?}\", point.y);//这会打印y: Cell { value: 7 }。我们成功的更新了y。"},"children":[]}]}]}]},{"data":{"id":"bmvq9vhn8o00","created":1531496709285,"text":"属性","expandState":"collapse","font-family":"andale mono","font-size":16},"children":[{"data":{"id":"bmvqauggit40","created":1531496785400,"text":"范围","expandState":"collapse","font-family":"andale mono","font-size":12,"note":"属性被用在一系列不同的地方。在参考手册中有一个属性的全表。目前，你不能创建你自己的属性，Rust 编译器定义了它们。"},"children":[{"data":{"id":"bmvqa1f0f4g0","created":1531496722186,"text":"#[test]","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[{"data":{"id":"bnsndrkk7wg0","created":1534840029451,"text":"作用于下一个项"},"children":[]}]},{"data":{"id":"bmvqa61up6w0","created":1531496732275,"text":"#![bar]","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[{"data":{"id":"bnsndv705d40","created":1534840037338,"text":"作用于包含它的项"},"children":[]}]}]},{"data":{"id":"bmvqb2ugvo80","created":1531496803662,"text":"#[inline(always)]","font-family":"andale mono","font-weight":"bold","font-size":12},"children":[]},{"data":{"id":"bmvqd4fm76o0","created":1531496963846,"text":"#[cfg[target_os=\"macos\")]","note":null,"font-family":"andale mono","font-weight":"bold","font-size":12},"children":[]}]},{"data":{"id":"bmvph28m4zc0","created":1531494451415,"text":"裸指针","font-family":"andale mono","font-size":16,"layout_mind_offset":{"x":-559,"y":208}},"children":[{"data":{"id":"bnvg38ccevsc","created":1535124136054,"text":"规则","expandState":"collapse"},"children":[{"data":{"id":"bnvg3hwmvsw0","created":1535124156872,"text":"Rust 的安全大多来源于编译时检查，\n不过裸指针并没有这样的保证，使用它们是unsafe的"},"children":[]},{"data":{"id":"bnvg3xt9r4oc","created":1535124191497,"text":"*const T和*mut T在 Rust 中被称为“裸指针”"},"children":[]}]},{"data":{"id":"bnvg4nmortkc","created":1535124247696,"text":"裸指针不同于其它指针的地方","expandState":"collapse"},"children":[{"data":{"id":"bnvg4u4s87k8","created":1535124261851,"text":"不能保证指向有效的内存，甚至不能保证是非空的（不像Box和&）"},"children":[]},{"data":{"id":"bnvg50hyoy04","created":1535124275708,"text":"没有任何自动清除，不像Box，所以需要手动管理资源"},"children":[]},{"data":{"id":"bnvg56a985c0","created":1535124288303,"text":"是普通旧式类型，也就是说，它不移动所有权，这又不像Box，因此Rust编译器不能保证不出像释放后使用这种bug"},"children":[]},{"data":{"id":"bnvg5hk2vc8o","created":1535124312841,"text":"缺少任何形式的生命周期，不像&，因此编译器不能判断出悬垂指针"},"children":[]},{"data":{"id":"bnvg5m14cj4s","created":1535124322579,"text":"除了不允许直接通过*const T改变外，没有别名或可变性的保障"},"children":[]}]},{"data":{"id":"bnvg67ffx9ko","created":1535124369157,"text":"基础","expandState":"collapse"},"children":[{"data":{"id":"bnvg6bef71ko","created":1535124377803,"text":"创建一个裸指针是非常安全的"},"children":[{"data":{"id":"bnvg6fh1zf48","created":1535124386669,"text":"let x = 5;\nlet raw = &x as *const i32;\nlet mut y = 10;\nlet raw_mut = &mut y as *mut i32;"},"children":[]}]},{"data":{"id":"bnvg78soes8c","created":1535124450499,"text":"解引用它则不行。下例并不能工作"},"children":[{"data":{"id":"bnvg7iint9ck","created":1535124471661,"text":"let x = 5;\nlet raw = &x as *const i32;\nprintln!(\"raw points at {}\", *raw);"},"children":[]}]},{"data":{"id":"bnvg8jkmfaos","created":1535124552320,"text":"当你解引用一个裸指针，你要为它并不指向正确的地方负责。\n为此，你需要unsafe"},"children":[{"data":{"id":"bnvg8qbdqowg","created":1535124566999,"text":"let x = 5;\nlet raw = &x as *const i32;\nlet points_at = unsafe { *raw };\nprintln!(\"raw points at {}\", points_at);"},"children":[]}]}]},{"data":{"id":"bnvg9d3kdd4o","created":1535124616592,"text":"FFI"},"children":[{"data":{"id":"bnvg9kbsyg8o","created":1535124632328,"text":"Rust的*const T和*mut T分别与C中的const T*和T*类似"},"children":[]}]},{"data":{"id":"bnvg9rkw7s8o","created":1535124648115,"text":"引用和裸指针"},"children":[]}]}]},"template":"right","theme":"classic","version":"1.4.43"}