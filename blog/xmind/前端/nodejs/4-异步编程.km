{"root":{"data":{"text":"异步编程","expandState":"expand"},"children":[{"data":{"text":"函数式编程","expandState":"expand"},"children":[{"data":{"text":"高阶函数：把函数作为输入或者返回"},"children":[]},{"data":{"text":"偏函数用法：创建一个调用另外一部分--参量或变量已经预置的函数--的函数的用法"},"children":[]}]},{"data":{"text":"异步编程的优势与难点","expandState":"expand"},"children":[{"data":{"text":"优势：基于事件驱动的非阻塞I/O模型","expandState":"expand"},"children":[]},{"data":{"text":"难点","expandState":"expand"},"children":[{"data":{"text":"异常处理"},"children":[]},{"data":{"text":"函数嵌套过深","expandState":"expand"},"children":[]},{"data":{"text":"阻塞代码"},"children":[]},{"data":{"text":"多线程编程"},"children":[]},{"data":{"text":"异步转同步"},"children":[]}]}]},{"data":{"text":"异步编程解决方案","expandState":"expand"},"children":[{"data":{"text":"事件发布/订阅模式","expandState":"expand"},"children":[{"data":{"text":"1.继承events模块","expandState":"expand"},"children":[]},{"data":{"text":"2.利用事件队列解决雪崩问题"},"children":[]},{"data":{"text":"3.多异步之间的协作方案"},"children":[]},{"data":{"text":"4.EventProxy的原理"},"children":[]},{"data":{"text":"5.EventProxy 的异常处理"},"children":[]}]},{"data":{"text":"Promise/Deferred模式","expandState":"expand"},"children":[{"data":{"text":"1.Promise/A","expandState":"expand"},"children":[]},{"data":{"text":"2.Promise中多异步协作"},"children":[]},{"data":{"text":"3.Promise的进阶知识","expandState":"expand"},"children":[{"data":{"text":"支持序列执行的Promise"},"children":[]},{"data":{"text":"将API  Promise化"},"children":[]}]}]},{"data":{"text":"流程化控制库","expandState":"expand"},"children":[{"data":{"text":"尾触发与Next"},"children":[]},{"data":{"text":"async","expandState":"expand"},"children":[{"data":{"text":"异步的串行执行"},"children":[]},{"data":{"text":"异步的并行执行"},"children":[]},{"data":{"text":"异步调用的依赖处理"},"children":[]},{"data":{"text":"自动依赖处理"},"children":[]}]},{"data":{"text":"Step：比async更轻量，在API的暴露下具有一致性","expandState":"expand"},"children":[{"data":{"text":"并行任务执行"},"children":[]},{"data":{"text":"结果分组"},"children":[]}]},{"data":{"text":"wind：赵劼开发，为JavaScript提供一个monadic扩展","expandState":"expand"},"children":[{"data":{"text":"异步任务定义"},"children":[]},{"data":{"text":"$await与任务模型"},"children":[]},{"data":{"text":"异步方法转换辅助函数"},"children":[]}]}]}]},{"data":{"text":"异步并发控制","expandState":"expand"},"children":[{"data":{"text":"bigpipe的解决方案","expandState":"expand"},"children":[{"data":{"text":"拒绝模式"},"children":[]},{"data":{"text":"超时控制"},"children":[]}]},{"data":{"text":"async的解决方案","expandState":"expand"},"children":[{"data":{"text":"parallelLimit()"},"children":[]}]}]}]},"template":"right","theme":"fresh-red-compat","version":"1.4.43"}